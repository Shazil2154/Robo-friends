{"version":3,"sources":["components/Card.jsx","components/Cardlist.jsx","components/Scroll.jsx","components/SearchBox.jsx","components/ErrorBoundary.js","containers/App.jsx","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","alt","name","email","Cardlist","robots","cardsArray","map","user","i","Scroll","console","log","style","overflow","border","height","children","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAaeA,EAXJ,SAACC,GACV,OACC,sBAAKC,UAAU,0DAAf,UACC,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,YAA8CC,IAAI,gBAC1D,sBAAKH,UAAU,aAAf,UACC,4BAAID,EAAMK,OACV,4BAAIL,EAAMM,eCcAC,EAlBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACZC,EAAaD,EAAOE,KAAI,SAACC,EAAKC,GACnC,OACA,cAAC,EAAD,CAECT,GAAIK,EAAOI,GAAGT,GACdE,KAAMG,EAAOI,GAAGP,KACfC,MAAOE,EAAOI,GAAGN,OAHbE,EAAOI,GAAGT,OAOjB,OACC,8BACCM,KCLYI,EAZA,SAACb,GAEf,OADAc,QAAQC,IAAIf,GAEX,qBAAKgB,MAAO,CACXC,SAAS,SACTC,OAAQ,kBACRC,OAAQ,SAHT,SAKEnB,EAAMoB,YCGKC,EAXG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACnB,OACC,qBAAKrB,UAAU,MAAf,SACC,uBAAOA,UAAU,mCAChBsB,KAAK,QACLC,YAAY,gBACZC,SAAUH,OCcCI,E,kDAlBd,WAAY1B,GAAO,IAAD,8BACjB,cAAMA,IACD2B,MAAM,CACVC,UAAS,GAHO,E,qDAMlB,SAAkBC,EAAMC,GACvBC,KAAKC,SAAS,CACbJ,UAAS,M,oBAGX,WACC,OAAGG,KAAKJ,MAAMC,SACN,sDAEDG,KAAK/B,MAAMoB,a,GAhBQa,aC2CbC,E,kDApCd,aAAc,IAAD,8BACZ,gBAWDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAX1C,EAAKZ,MAAQ,CACZnB,OAAQ,GACR6B,YAAa,IAJF,E,qDAOZ,WAAoB,IAAD,OAClBG,MAAM,4CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAExB,OAAOoC,S,oBAKxC,WAAS,IAAD,OACDC,EAAiBd,KAAKJ,MAAMnB,OAAOsC,QAAQ,SAAAC,GAChD,OAAOA,EAAM1C,KAAK2C,cAAcC,SAAS,EAAKtB,MAAMU,YAAYW,kBAEjE,OAA8B,IAA3BjB,KAAKJ,MAAMnB,OAAO0C,OACb,kDAGP,sBAAKjD,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWqB,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU3B,OAAQqC,e,GA7BNZ,aCKHkB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6627a4e4.chunk.js","sourcesContent":["// import React,{fragments} from 'react';\r\nimport './Card.css';\r\nconst Card=(props)=>{ \r\n\t\treturn(\r\n\t\t\t<div className='tc card bg-light-green dib br3 pa3 ma2 grow bw2 shadow5'>\r\n\t\t\t\t<img src={`https://robohash.org/${props.id}/200x200`} alt=\"Profile pic\"/>\r\n\t\t\t\t<div className='card__info'>\r\n\t\t\t\t\t<p>{props.name}</p>\r\n\t\t\t\t\t<p>{props.email}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t);\r\n}\r\nexport default Card;","// import {robots} from './robots.js';\r\nimport Card from './Card'\r\n\r\n\r\nconst Cardlist = ({robots})=>{\r\n\tconst cardsArray = robots.map((user,i)=>{\r\n\t\treturn (\r\n\t\t<Card \r\n\t\t key={robots[i].id} \r\n\t\t id={robots[i].id}\r\n\t\t name={robots[i].name}\r\n\t\t  email={robots[i].email}\r\n\t\t />\r\n\t\t )\r\n\t\t});\r\n\treturn(\r\n\t\t<div>\r\n\t\t{cardsArray}\r\n\t     </div>\r\n\t\t)\r\n}\r\n\r\nexport default Cardlist;","const Scroll = (props)=>{\r\n\tconsole.log(props);\r\n\treturn (\r\n\t\t<div style={{\r\n\t\t\toverflow:'scroll',\r\n\t\t\tborder: '5px solid black',\r\n\t\t\theight: '460px'\r\n\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Scroll;","const SearchBox = ({searchChange})=>{\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input className=\"pa3 ba b--green bg-lightest-blue\"\r\n\t\t\t type=\"input\"\r\n\t\t\t placeholder=\"Search Robots\"\r\n\t\t\t onChange={searchChange} \r\n\t\t\t />\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default SearchBox;","import React,{Component} from 'react';\r\nclass ErrorBoundary extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\thasError:false\r\n\t\t}\r\n\t}\r\n\tcomponentDidCatch(error,info){\r\n\t\tthis.setState({\r\n\t\t\thasError:true\r\n\t\t})\r\n\t}\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1>OPs,That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\nexport default ErrorBoundary;","import React,{Component} from 'react';\r\nimport './App.css';\r\nimport Cardlist from '../components/Cardlist';\r\n//import robots from './robots.js' using api instead of this local file\r\nimport Scroll from '../components/Scroll'\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchField: \"\"\r\n\t\t}\r\n\t}\r\n\t componentDidMount(){           // it is a part of hook lifecycle\r\n\t \tfetch('https://jsonplaceholder.cypress.io/users')\r\n\t \t.then(response=> response.json())\r\n\t \t.then(users => this.setState({ robots:users }));\r\n\t }\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchField: event.target.value });\r\n\t}\r\n\trender(){\r\n\t\tconst filteredRobots = this.state.robots.filter( robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n\t\t})\r\n\t\tif(this.state.robots.length===0){\r\n\t\t\treturn <h1>Loading . . .  .</h1>\r\n\t\t}else{\r\n\t\t\treturn(\r\n\t\t\t<div className=\"tc\">\r\n\t\t\t\t<h1 className='f1'>Robo Friends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<Cardlist robots={filteredRobots} />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n\t    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}